
// struct Vec2 {
//   x: f64;
//   y: f64;

//   constructor(x: f64, y: f64): Vec2 {
//     return Vec2 {
//       .x: x,
//       .y: y,
//     };
//   }

//   neg(): Vec2 {
//     return Vec2(-this.x, -this.y);
//   }

//   add(other: Vec2): Vec2 {
//     return Vec2(this.x + other.x, this.y + other.y);
//   }

//   sub(other: Vec2): Vec2 {
//     return Vec2(this.x - other.x, this.y - other.y);
//   }

//   mul(v: f64): Vec2 {
//     return Vec2(this.x * v, this.y * v);
//   }

//   div(v: f64): Vec2 {
//     return Vec2(this.x / v, this.y / v);
//   }

//   length(): f64 {
//     return sqrt(pow(this.x, 2) + pow(this.y, 2));
//   }

//   normalize(): Vec2 {
//     return this.div(this.length());
//   }

//   dot(other: Vec2): f64 {
//     return this.x * other.x + this.y * other.y;
//   }
// }