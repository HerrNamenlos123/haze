
struct CString {
}

struct Callable<TFunc> {}

struct LogContext {
  trace: (fmt: str, ...) => none;
  info: (fmt: str, ...) => none;
  debug: (fmt: str, ...) => none;
  warn: (fmt: str, ...) => none;
  error: (fmt: str, ...) => none;
}

struct MemContext {
  alloc: (size: u64) => none*;
  globalDefaultArena: none*;
}

struct Context {
  log: LogContext;
  mem: MemContext;
};

struct Foo {
  value: i32;

  get(): Foo => {
    return 5;
  }
}

printf();

foo() => {
  const foo = Foo {
    .value: 5,
  };
  printf();
  const a = foo.get().get().get();
}
