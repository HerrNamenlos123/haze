inject "#include <linux/limits.h>";
inject "#include <unistd.h>";
inject "#include <errno.h>";

namespace Process {
    export cwd(): Result<String, String> {
        const path = String("");
        const maxlen: u64 = 0;
        __c__("maxlen = PATH_MAX");
        path.reserve(maxlen);
        const result = 0 as RawPtr<u8>;
        __c__("result = (uint8_t*)getcwd(path.data.data, maxlen)");
        if result as u64 != 0 {
            return Result<String, String> {
                .success: path,
                .isSuccess: true,
            };
        }
        let err: stringview;
        __c__("err = strerror(errno)");
        const error = String("getcwd() error: ");
        error.append(String(err));
        return Result<String, String> {
            .error: error,
            .isSuccess: false,
        };
    }
}