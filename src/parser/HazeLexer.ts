// Generated from Haze.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class HazeLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly T__36 = 37;
	public static readonly T__37 = 38;
	public static readonly T__38 = 39;
	public static readonly T__39 = 40;
	public static readonly T__40 = 41;
	public static readonly T__41 = 42;
	public static readonly T__42 = 43;
	public static readonly T__43 = 44;
	public static readonly T__44 = 45;
	public static readonly T__45 = 46;
	public static readonly T__46 = 47;
	public static readonly T__47 = 48;
	public static readonly T__48 = 49;
	public static readonly T__49 = 50;
	public static readonly T__50 = 51;
	public static readonly T__51 = 52;
	public static readonly T__52 = 53;
	public static readonly T__53 = 54;
	public static readonly T__54 = 55;
	public static readonly STRING_LITERAL = 56;
	public static readonly UNIT_LITERAL = 57;
	public static readonly NUMBER_LITERAL = 58;
	public static readonly ID = 59;
	public static readonly WS = 60;
	public static readonly COMMENT = 61;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'('", 
                                                            "')'", "':'", 
                                                            "'=>'", "'{'", 
                                                            "'}'", "','", 
                                                            "'declare'", 
                                                            "';'", "'.'", 
                                                            "'\"C\"'", "'\"C++\"'", 
                                                            "'let'", "'const'", 
                                                            "'__c__'", "'return'", 
                                                            "'='", "'if'", 
                                                            "'else'", "'while'", 
                                                            "'++'", "'--'", 
                                                            "'+'", "'-'", 
                                                            "'not'", "'!'", 
                                                            "'as'", "'*'", 
                                                            "'/'", "'%'", 
                                                            "'<'", "'>'", 
                                                            "'<='", "'>='", 
                                                            "'=='", "'!='", 
                                                            "'is'", "'and'", 
                                                            "'or'", "'+='", 
                                                            "'-='", "'*='", 
                                                            "'/='", "'%='", 
                                                            "'<<='", "'>>='", 
                                                            "'&='", "'^='", 
                                                            "'|='", "'...'", 
                                                            "'true'", "'false'", 
                                                            "'#compile'", 
                                                            "'#link'", "'struct'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             "STRING_LITERAL", 
                                                             "UNIT_LITERAL", 
                                                             "NUMBER_LITERAL", 
                                                             "ID", "WS", 
                                                             "COMMENT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "STRING_LITERAL", 
		"ESC", "HEX", "DEC_PART", "FLOAT_PART", "DIGIT", "UNIT_LITERAL", "NUMBER_LITERAL", 
		"ID", "WS", "COMMENT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, HazeLexer._ATN, HazeLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "Haze.g4"; }

	public get literalNames(): (string | null)[] { return HazeLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return HazeLexer.symbolicNames; }
	public get ruleNames(): string[] { return HazeLexer.ruleNames; }

	public get serializedATN(): number[] { return HazeLexer._serializedATN; }

	public get channelNames(): string[] { return HazeLexer.channelNames; }

	public get modeNames(): string[] { return HazeLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,61,426,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,1,0,1,0,1,1,1,
	1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,
	7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,
	1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,
	14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,18,
	1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,
	21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,1,26,1,26,1,26,
	1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,32,1,33,1,
	33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,37,
	1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,
	42,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,46,1,46,1,46,
	1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,
	50,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,
	1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,
	55,1,55,1,55,5,55,333,8,55,10,55,12,55,336,9,55,1,55,1,55,1,56,1,56,1,56,
	1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,
	56,1,56,3,56,359,8,56,3,56,361,8,56,1,57,1,57,1,58,4,58,366,8,58,11,58,
	12,58,367,1,59,4,59,371,8,59,11,59,12,59,372,1,59,1,59,5,59,377,8,59,10,
	59,12,59,380,9,59,1,60,1,60,1,61,1,61,3,61,386,8,61,1,61,1,61,1,61,1,61,
	1,61,1,61,1,61,1,61,3,61,396,8,61,1,62,1,62,3,62,400,8,62,1,63,1,63,5,63,
	404,8,63,10,63,12,63,407,9,63,1,64,4,64,410,8,64,11,64,12,64,411,1,64,1,
	64,1,65,1,65,1,65,1,65,5,65,420,8,65,10,65,12,65,423,9,65,1,65,1,65,0,0,
	66,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
	29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
	53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,
	77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,
	101,51,103,52,105,53,107,54,109,55,111,56,113,0,115,0,117,0,119,0,121,0,
	123,57,125,58,127,59,129,60,131,61,1,0,9,2,0,34,34,92,92,8,0,34,34,39,39,
	92,92,98,98,102,102,110,110,114,114,116,116,3,0,48,57,65,70,97,102,1,0,
	48,57,3,0,100,100,104,104,109,109,3,0,65,90,95,95,97,122,4,0,48,57,65,90,
	95,95,97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,436,0,1,1,0,0,0,0,3,1,
	0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
	1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,
	0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
	1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
	0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
	1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
	0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
	1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
	0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,
	1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,123,1,
	0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,1,133,1,0,
	0,0,3,135,1,0,0,0,5,137,1,0,0,0,7,139,1,0,0,0,9,142,1,0,0,0,11,144,1,0,
	0,0,13,146,1,0,0,0,15,148,1,0,0,0,17,156,1,0,0,0,19,158,1,0,0,0,21,160,
	1,0,0,0,23,164,1,0,0,0,25,170,1,0,0,0,27,174,1,0,0,0,29,180,1,0,0,0,31,
	186,1,0,0,0,33,193,1,0,0,0,35,195,1,0,0,0,37,198,1,0,0,0,39,203,1,0,0,0,
	41,209,1,0,0,0,43,212,1,0,0,0,45,215,1,0,0,0,47,217,1,0,0,0,49,219,1,0,
	0,0,51,223,1,0,0,0,53,225,1,0,0,0,55,228,1,0,0,0,57,230,1,0,0,0,59,232,
	1,0,0,0,61,234,1,0,0,0,63,236,1,0,0,0,65,238,1,0,0,0,67,241,1,0,0,0,69,
	244,1,0,0,0,71,247,1,0,0,0,73,250,1,0,0,0,75,253,1,0,0,0,77,257,1,0,0,0,
	79,260,1,0,0,0,81,263,1,0,0,0,83,266,1,0,0,0,85,269,1,0,0,0,87,272,1,0,
	0,0,89,275,1,0,0,0,91,279,1,0,0,0,93,283,1,0,0,0,95,286,1,0,0,0,97,289,
	1,0,0,0,99,292,1,0,0,0,101,296,1,0,0,0,103,301,1,0,0,0,105,307,1,0,0,0,
	107,316,1,0,0,0,109,322,1,0,0,0,111,329,1,0,0,0,113,360,1,0,0,0,115,362,
	1,0,0,0,117,365,1,0,0,0,119,370,1,0,0,0,121,381,1,0,0,0,123,385,1,0,0,0,
	125,399,1,0,0,0,127,401,1,0,0,0,129,409,1,0,0,0,131,415,1,0,0,0,133,134,
	5,40,0,0,134,2,1,0,0,0,135,136,5,41,0,0,136,4,1,0,0,0,137,138,5,58,0,0,
	138,6,1,0,0,0,139,140,5,61,0,0,140,141,5,62,0,0,141,8,1,0,0,0,142,143,5,
	123,0,0,143,10,1,0,0,0,144,145,5,125,0,0,145,12,1,0,0,0,146,147,5,44,0,
	0,147,14,1,0,0,0,148,149,5,100,0,0,149,150,5,101,0,0,150,151,5,99,0,0,151,
	152,5,108,0,0,152,153,5,97,0,0,153,154,5,114,0,0,154,155,5,101,0,0,155,
	16,1,0,0,0,156,157,5,59,0,0,157,18,1,0,0,0,158,159,5,46,0,0,159,20,1,0,
	0,0,160,161,5,34,0,0,161,162,5,67,0,0,162,163,5,34,0,0,163,22,1,0,0,0,164,
	165,5,34,0,0,165,166,5,67,0,0,166,167,5,43,0,0,167,168,5,43,0,0,168,169,
	5,34,0,0,169,24,1,0,0,0,170,171,5,108,0,0,171,172,5,101,0,0,172,173,5,116,
	0,0,173,26,1,0,0,0,174,175,5,99,0,0,175,176,5,111,0,0,176,177,5,110,0,0,
	177,178,5,115,0,0,178,179,5,116,0,0,179,28,1,0,0,0,180,181,5,95,0,0,181,
	182,5,95,0,0,182,183,5,99,0,0,183,184,5,95,0,0,184,185,5,95,0,0,185,30,
	1,0,0,0,186,187,5,114,0,0,187,188,5,101,0,0,188,189,5,116,0,0,189,190,5,
	117,0,0,190,191,5,114,0,0,191,192,5,110,0,0,192,32,1,0,0,0,193,194,5,61,
	0,0,194,34,1,0,0,0,195,196,5,105,0,0,196,197,5,102,0,0,197,36,1,0,0,0,198,
	199,5,101,0,0,199,200,5,108,0,0,200,201,5,115,0,0,201,202,5,101,0,0,202,
	38,1,0,0,0,203,204,5,119,0,0,204,205,5,104,0,0,205,206,5,105,0,0,206,207,
	5,108,0,0,207,208,5,101,0,0,208,40,1,0,0,0,209,210,5,43,0,0,210,211,5,43,
	0,0,211,42,1,0,0,0,212,213,5,45,0,0,213,214,5,45,0,0,214,44,1,0,0,0,215,
	216,5,43,0,0,216,46,1,0,0,0,217,218,5,45,0,0,218,48,1,0,0,0,219,220,5,110,
	0,0,220,221,5,111,0,0,221,222,5,116,0,0,222,50,1,0,0,0,223,224,5,33,0,0,
	224,52,1,0,0,0,225,226,5,97,0,0,226,227,5,115,0,0,227,54,1,0,0,0,228,229,
	5,42,0,0,229,56,1,0,0,0,230,231,5,47,0,0,231,58,1,0,0,0,232,233,5,37,0,
	0,233,60,1,0,0,0,234,235,5,60,0,0,235,62,1,0,0,0,236,237,5,62,0,0,237,64,
	1,0,0,0,238,239,5,60,0,0,239,240,5,61,0,0,240,66,1,0,0,0,241,242,5,62,0,
	0,242,243,5,61,0,0,243,68,1,0,0,0,244,245,5,61,0,0,245,246,5,61,0,0,246,
	70,1,0,0,0,247,248,5,33,0,0,248,249,5,61,0,0,249,72,1,0,0,0,250,251,5,105,
	0,0,251,252,5,115,0,0,252,74,1,0,0,0,253,254,5,97,0,0,254,255,5,110,0,0,
	255,256,5,100,0,0,256,76,1,0,0,0,257,258,5,111,0,0,258,259,5,114,0,0,259,
	78,1,0,0,0,260,261,5,43,0,0,261,262,5,61,0,0,262,80,1,0,0,0,263,264,5,45,
	0,0,264,265,5,61,0,0,265,82,1,0,0,0,266,267,5,42,0,0,267,268,5,61,0,0,268,
	84,1,0,0,0,269,270,5,47,0,0,270,271,5,61,0,0,271,86,1,0,0,0,272,273,5,37,
	0,0,273,274,5,61,0,0,274,88,1,0,0,0,275,276,5,60,0,0,276,277,5,60,0,0,277,
	278,5,61,0,0,278,90,1,0,0,0,279,280,5,62,0,0,280,281,5,62,0,0,281,282,5,
	61,0,0,282,92,1,0,0,0,283,284,5,38,0,0,284,285,5,61,0,0,285,94,1,0,0,0,
	286,287,5,94,0,0,287,288,5,61,0,0,288,96,1,0,0,0,289,290,5,124,0,0,290,
	291,5,61,0,0,291,98,1,0,0,0,292,293,5,46,0,0,293,294,5,46,0,0,294,295,5,
	46,0,0,295,100,1,0,0,0,296,297,5,116,0,0,297,298,5,114,0,0,298,299,5,117,
	0,0,299,300,5,101,0,0,300,102,1,0,0,0,301,302,5,102,0,0,302,303,5,97,0,
	0,303,304,5,108,0,0,304,305,5,115,0,0,305,306,5,101,0,0,306,104,1,0,0,0,
	307,308,5,35,0,0,308,309,5,99,0,0,309,310,5,111,0,0,310,311,5,109,0,0,311,
	312,5,112,0,0,312,313,5,105,0,0,313,314,5,108,0,0,314,315,5,101,0,0,315,
	106,1,0,0,0,316,317,5,35,0,0,317,318,5,108,0,0,318,319,5,105,0,0,319,320,
	5,110,0,0,320,321,5,107,0,0,321,108,1,0,0,0,322,323,5,115,0,0,323,324,5,
	116,0,0,324,325,5,114,0,0,325,326,5,117,0,0,326,327,5,99,0,0,327,328,5,
	116,0,0,328,110,1,0,0,0,329,334,5,34,0,0,330,333,3,113,56,0,331,333,8,0,
	0,0,332,330,1,0,0,0,332,331,1,0,0,0,333,336,1,0,0,0,334,332,1,0,0,0,334,
	335,1,0,0,0,335,337,1,0,0,0,336,334,1,0,0,0,337,338,5,34,0,0,338,112,1,
	0,0,0,339,340,5,92,0,0,340,361,7,1,0,0,341,358,5,92,0,0,342,343,5,117,0,
	0,343,344,3,115,57,0,344,345,3,115,57,0,345,346,3,115,57,0,346,347,3,115,
	57,0,347,359,1,0,0,0,348,349,5,85,0,0,349,350,3,115,57,0,350,351,3,115,
	57,0,351,352,3,115,57,0,352,353,3,115,57,0,353,354,3,115,57,0,354,355,3,
	115,57,0,355,356,3,115,57,0,356,357,3,115,57,0,357,359,1,0,0,0,358,342,
	1,0,0,0,358,348,1,0,0,0,359,361,1,0,0,0,360,339,1,0,0,0,360,341,1,0,0,0,
	361,114,1,0,0,0,362,363,7,2,0,0,363,116,1,0,0,0,364,366,3,121,60,0,365,
	364,1,0,0,0,366,367,1,0,0,0,367,365,1,0,0,0,367,368,1,0,0,0,368,118,1,0,
	0,0,369,371,3,121,60,0,370,369,1,0,0,0,371,372,1,0,0,0,372,370,1,0,0,0,
	372,373,1,0,0,0,373,374,1,0,0,0,374,378,5,46,0,0,375,377,3,121,60,0,376,
	375,1,0,0,0,377,380,1,0,0,0,378,376,1,0,0,0,378,379,1,0,0,0,379,120,1,0,
	0,0,380,378,1,0,0,0,381,382,7,3,0,0,382,122,1,0,0,0,383,386,3,117,58,0,
	384,386,3,119,59,0,385,383,1,0,0,0,385,384,1,0,0,0,386,395,1,0,0,0,387,
	396,5,115,0,0,388,389,5,109,0,0,389,396,5,115,0,0,390,391,5,117,0,0,391,
	396,5,115,0,0,392,393,5,110,0,0,393,396,5,115,0,0,394,396,7,4,0,0,395,387,
	1,0,0,0,395,388,1,0,0,0,395,390,1,0,0,0,395,392,1,0,0,0,395,394,1,0,0,0,
	396,124,1,0,0,0,397,400,3,117,58,0,398,400,3,119,59,0,399,397,1,0,0,0,399,
	398,1,0,0,0,400,126,1,0,0,0,401,405,7,5,0,0,402,404,7,6,0,0,403,402,1,0,
	0,0,404,407,1,0,0,0,405,403,1,0,0,0,405,406,1,0,0,0,406,128,1,0,0,0,407,
	405,1,0,0,0,408,410,7,7,0,0,409,408,1,0,0,0,410,411,1,0,0,0,411,409,1,0,
	0,0,411,412,1,0,0,0,412,413,1,0,0,0,413,414,6,64,0,0,414,130,1,0,0,0,415,
	416,5,47,0,0,416,417,5,47,0,0,417,421,1,0,0,0,418,420,8,8,0,0,419,418,1,
	0,0,0,420,423,1,0,0,0,421,419,1,0,0,0,421,422,1,0,0,0,422,424,1,0,0,0,423,
	421,1,0,0,0,424,425,6,65,0,0,425,132,1,0,0,0,14,0,332,334,358,360,367,372,
	378,385,395,399,405,411,421,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!HazeLexer.__ATN) {
			HazeLexer.__ATN = new ATNDeserializer().deserialize(HazeLexer._serializedATN);
		}

		return HazeLexer.__ATN;
	}


	static DecisionsToDFA = HazeLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}