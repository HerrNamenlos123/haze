// Generated from Haze.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class HazeLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly T__36 = 37;
	public static readonly T__37 = 38;
	public static readonly T__38 = 39;
	public static readonly T__39 = 40;
	public static readonly T__40 = 41;
	public static readonly T__41 = 42;
	public static readonly T__42 = 43;
	public static readonly T__43 = 44;
	public static readonly T__44 = 45;
	public static readonly T__45 = 46;
	public static readonly T__46 = 47;
	public static readonly T__47 = 48;
	public static readonly T__48 = 49;
	public static readonly T__49 = 50;
	public static readonly T__50 = 51;
	public static readonly T__51 = 52;
	public static readonly T__52 = 53;
	public static readonly T__53 = 54;
	public static readonly T__54 = 55;
	public static readonly T__55 = 56;
	public static readonly T__56 = 57;
	public static readonly T__57 = 58;
	public static readonly T__58 = 59;
	public static readonly T__59 = 60;
	public static readonly STRING_LITERAL = 61;
	public static readonly UNIT_LITERAL = 62;
	public static readonly NUMBER_LITERAL = 63;
	public static readonly ID = 64;
	public static readonly WS = 65;
	public static readonly COMMENT = 66;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'namespace'", 
                                                            "'{'", "'}'", 
                                                            "'('", "')'", 
                                                            "':'", "'=>'", 
                                                            "','", "'inject'", 
                                                            "';'", "'prebuildcmd'", 
                                                            "'postbuildcmd'", 
                                                            "'declare'", 
                                                            "'.'", "'\"C\"'", 
                                                            "'\"C++\"'", 
                                                            "'let'", "'const'", 
                                                            "'__c__'", "'return'", 
                                                            "'='", "'if'", 
                                                            "'else'", "'while'", 
                                                            "'++'", "'--'", 
                                                            "'+'", "'-'", 
                                                            "'not'", "'!'", 
                                                            "'as'", "'*'", 
                                                            "'/'", "'%'", 
                                                            "'<'", "'>'", 
                                                            "'<='", "'>='", 
                                                            "'=='", "'!='", 
                                                            "'is'", "'and'", 
                                                            "'or'", "'+='", 
                                                            "'-='", "'*='", 
                                                            "'/='", "'%='", 
                                                            "'<<='", "'>>='", 
                                                            "'&='", "'^='", 
                                                            "'|='", "'...'", 
                                                            "'true'", "'false'", 
                                                            "'#compile'", 
                                                            "'link'", "'unsafe_union'", 
                                                            "'struct'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, "STRING_LITERAL", 
                                                             "UNIT_LITERAL", 
                                                             "NUMBER_LITERAL", 
                                                             "ID", "WS", 
                                                             "COMMENT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
		"T__57", "T__58", "T__59", "STRING_LITERAL", "ESC", "HEX", "DEC_PART", 
		"FLOAT_PART", "DIGIT", "UNIT_LITERAL", "NUMBER_LITERAL", "ID", "WS", "COMMENT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, HazeLexer._ATN, HazeLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "Haze.g4"; }

	public get literalNames(): (string | null)[] { return HazeLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return HazeLexer.symbolicNames; }
	public get ruleNames(): string[] { return HazeLexer.ruleNames; }

	public get serializedATN(): number[] { return HazeLexer._serializedATN; }

	public get channelNames(): string[] { return HazeLexer.channelNames; }

	public get modeNames(): string[] { return HazeLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,66,490,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,2,69,7,69,2,70,7,70,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
	1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,8,1,8,
	1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
	1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
	11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,14,
	1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,
	17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,
	1,19,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,
	23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,
	1,28,1,28,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,
	34,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,
	1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,
	44,1,44,1,45,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,48,
	1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,53,1,
	53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,56,
	1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,58,1,
	58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,
	1,59,1,59,1,59,1,59,1,60,1,60,1,60,5,60,397,8,60,10,60,12,60,400,9,60,1,
	60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,
	1,61,1,61,1,61,1,61,1,61,1,61,3,61,423,8,61,3,61,425,8,61,1,62,1,62,1,63,
	4,63,430,8,63,11,63,12,63,431,1,64,4,64,435,8,64,11,64,12,64,436,1,64,1,
	64,5,64,441,8,64,10,64,12,64,444,9,64,1,65,1,65,1,66,1,66,3,66,450,8,66,
	1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,3,66,460,8,66,1,67,1,67,3,67,464,
	8,67,1,68,1,68,5,68,468,8,68,10,68,12,68,471,9,68,1,69,4,69,474,8,69,11,
	69,12,69,475,1,69,1,69,1,70,1,70,1,70,1,70,5,70,484,8,70,10,70,12,70,487,
	9,70,1,70,1,70,0,0,71,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
	11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
	23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,
	35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,
	47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,
	58,117,59,119,60,121,61,123,0,125,0,127,0,129,0,131,0,133,62,135,63,137,
	64,139,65,141,66,1,0,9,2,0,34,34,92,92,8,0,34,34,39,39,92,92,98,98,102,
	102,110,110,114,114,116,116,3,0,48,57,65,70,97,102,1,0,48,57,3,0,100,100,
	104,104,109,109,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,
	9,10,13,13,32,32,2,0,10,10,13,13,500,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,
	0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
	0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,
	0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
	0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,
	0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,
	0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,
	0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,
	0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,
	0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,
	1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,
	0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,133,1,0,0,0,0,135,1,0,
	0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,1,143,1,0,0,0,3,153,1,0,0,
	0,5,155,1,0,0,0,7,157,1,0,0,0,9,159,1,0,0,0,11,161,1,0,0,0,13,163,1,0,0,
	0,15,166,1,0,0,0,17,168,1,0,0,0,19,175,1,0,0,0,21,177,1,0,0,0,23,189,1,
	0,0,0,25,202,1,0,0,0,27,210,1,0,0,0,29,212,1,0,0,0,31,216,1,0,0,0,33,222,
	1,0,0,0,35,226,1,0,0,0,37,232,1,0,0,0,39,238,1,0,0,0,41,245,1,0,0,0,43,
	247,1,0,0,0,45,250,1,0,0,0,47,255,1,0,0,0,49,261,1,0,0,0,51,264,1,0,0,0,
	53,267,1,0,0,0,55,269,1,0,0,0,57,271,1,0,0,0,59,275,1,0,0,0,61,277,1,0,
	0,0,63,280,1,0,0,0,65,282,1,0,0,0,67,284,1,0,0,0,69,286,1,0,0,0,71,288,
	1,0,0,0,73,290,1,0,0,0,75,293,1,0,0,0,77,296,1,0,0,0,79,299,1,0,0,0,81,
	302,1,0,0,0,83,305,1,0,0,0,85,309,1,0,0,0,87,312,1,0,0,0,89,315,1,0,0,0,
	91,318,1,0,0,0,93,321,1,0,0,0,95,324,1,0,0,0,97,327,1,0,0,0,99,331,1,0,
	0,0,101,335,1,0,0,0,103,338,1,0,0,0,105,341,1,0,0,0,107,344,1,0,0,0,109,
	348,1,0,0,0,111,353,1,0,0,0,113,359,1,0,0,0,115,368,1,0,0,0,117,373,1,0,
	0,0,119,386,1,0,0,0,121,393,1,0,0,0,123,424,1,0,0,0,125,426,1,0,0,0,127,
	429,1,0,0,0,129,434,1,0,0,0,131,445,1,0,0,0,133,449,1,0,0,0,135,463,1,0,
	0,0,137,465,1,0,0,0,139,473,1,0,0,0,141,479,1,0,0,0,143,144,5,110,0,0,144,
	145,5,97,0,0,145,146,5,109,0,0,146,147,5,101,0,0,147,148,5,115,0,0,148,
	149,5,112,0,0,149,150,5,97,0,0,150,151,5,99,0,0,151,152,5,101,0,0,152,2,
	1,0,0,0,153,154,5,123,0,0,154,4,1,0,0,0,155,156,5,125,0,0,156,6,1,0,0,0,
	157,158,5,40,0,0,158,8,1,0,0,0,159,160,5,41,0,0,160,10,1,0,0,0,161,162,
	5,58,0,0,162,12,1,0,0,0,163,164,5,61,0,0,164,165,5,62,0,0,165,14,1,0,0,
	0,166,167,5,44,0,0,167,16,1,0,0,0,168,169,5,105,0,0,169,170,5,110,0,0,170,
	171,5,106,0,0,171,172,5,101,0,0,172,173,5,99,0,0,173,174,5,116,0,0,174,
	18,1,0,0,0,175,176,5,59,0,0,176,20,1,0,0,0,177,178,5,112,0,0,178,179,5,
	114,0,0,179,180,5,101,0,0,180,181,5,98,0,0,181,182,5,117,0,0,182,183,5,
	105,0,0,183,184,5,108,0,0,184,185,5,100,0,0,185,186,5,99,0,0,186,187,5,
	109,0,0,187,188,5,100,0,0,188,22,1,0,0,0,189,190,5,112,0,0,190,191,5,111,
	0,0,191,192,5,115,0,0,192,193,5,116,0,0,193,194,5,98,0,0,194,195,5,117,
	0,0,195,196,5,105,0,0,196,197,5,108,0,0,197,198,5,100,0,0,198,199,5,99,
	0,0,199,200,5,109,0,0,200,201,5,100,0,0,201,24,1,0,0,0,202,203,5,100,0,
	0,203,204,5,101,0,0,204,205,5,99,0,0,205,206,5,108,0,0,206,207,5,97,0,0,
	207,208,5,114,0,0,208,209,5,101,0,0,209,26,1,0,0,0,210,211,5,46,0,0,211,
	28,1,0,0,0,212,213,5,34,0,0,213,214,5,67,0,0,214,215,5,34,0,0,215,30,1,
	0,0,0,216,217,5,34,0,0,217,218,5,67,0,0,218,219,5,43,0,0,219,220,5,43,0,
	0,220,221,5,34,0,0,221,32,1,0,0,0,222,223,5,108,0,0,223,224,5,101,0,0,224,
	225,5,116,0,0,225,34,1,0,0,0,226,227,5,99,0,0,227,228,5,111,0,0,228,229,
	5,110,0,0,229,230,5,115,0,0,230,231,5,116,0,0,231,36,1,0,0,0,232,233,5,
	95,0,0,233,234,5,95,0,0,234,235,5,99,0,0,235,236,5,95,0,0,236,237,5,95,
	0,0,237,38,1,0,0,0,238,239,5,114,0,0,239,240,5,101,0,0,240,241,5,116,0,
	0,241,242,5,117,0,0,242,243,5,114,0,0,243,244,5,110,0,0,244,40,1,0,0,0,
	245,246,5,61,0,0,246,42,1,0,0,0,247,248,5,105,0,0,248,249,5,102,0,0,249,
	44,1,0,0,0,250,251,5,101,0,0,251,252,5,108,0,0,252,253,5,115,0,0,253,254,
	5,101,0,0,254,46,1,0,0,0,255,256,5,119,0,0,256,257,5,104,0,0,257,258,5,
	105,0,0,258,259,5,108,0,0,259,260,5,101,0,0,260,48,1,0,0,0,261,262,5,43,
	0,0,262,263,5,43,0,0,263,50,1,0,0,0,264,265,5,45,0,0,265,266,5,45,0,0,266,
	52,1,0,0,0,267,268,5,43,0,0,268,54,1,0,0,0,269,270,5,45,0,0,270,56,1,0,
	0,0,271,272,5,110,0,0,272,273,5,111,0,0,273,274,5,116,0,0,274,58,1,0,0,
	0,275,276,5,33,0,0,276,60,1,0,0,0,277,278,5,97,0,0,278,279,5,115,0,0,279,
	62,1,0,0,0,280,281,5,42,0,0,281,64,1,0,0,0,282,283,5,47,0,0,283,66,1,0,
	0,0,284,285,5,37,0,0,285,68,1,0,0,0,286,287,5,60,0,0,287,70,1,0,0,0,288,
	289,5,62,0,0,289,72,1,0,0,0,290,291,5,60,0,0,291,292,5,61,0,0,292,74,1,
	0,0,0,293,294,5,62,0,0,294,295,5,61,0,0,295,76,1,0,0,0,296,297,5,61,0,0,
	297,298,5,61,0,0,298,78,1,0,0,0,299,300,5,33,0,0,300,301,5,61,0,0,301,80,
	1,0,0,0,302,303,5,105,0,0,303,304,5,115,0,0,304,82,1,0,0,0,305,306,5,97,
	0,0,306,307,5,110,0,0,307,308,5,100,0,0,308,84,1,0,0,0,309,310,5,111,0,
	0,310,311,5,114,0,0,311,86,1,0,0,0,312,313,5,43,0,0,313,314,5,61,0,0,314,
	88,1,0,0,0,315,316,5,45,0,0,316,317,5,61,0,0,317,90,1,0,0,0,318,319,5,42,
	0,0,319,320,5,61,0,0,320,92,1,0,0,0,321,322,5,47,0,0,322,323,5,61,0,0,323,
	94,1,0,0,0,324,325,5,37,0,0,325,326,5,61,0,0,326,96,1,0,0,0,327,328,5,60,
	0,0,328,329,5,60,0,0,329,330,5,61,0,0,330,98,1,0,0,0,331,332,5,62,0,0,332,
	333,5,62,0,0,333,334,5,61,0,0,334,100,1,0,0,0,335,336,5,38,0,0,336,337,
	5,61,0,0,337,102,1,0,0,0,338,339,5,94,0,0,339,340,5,61,0,0,340,104,1,0,
	0,0,341,342,5,124,0,0,342,343,5,61,0,0,343,106,1,0,0,0,344,345,5,46,0,0,
	345,346,5,46,0,0,346,347,5,46,0,0,347,108,1,0,0,0,348,349,5,116,0,0,349,
	350,5,114,0,0,350,351,5,117,0,0,351,352,5,101,0,0,352,110,1,0,0,0,353,354,
	5,102,0,0,354,355,5,97,0,0,355,356,5,108,0,0,356,357,5,115,0,0,357,358,
	5,101,0,0,358,112,1,0,0,0,359,360,5,35,0,0,360,361,5,99,0,0,361,362,5,111,
	0,0,362,363,5,109,0,0,363,364,5,112,0,0,364,365,5,105,0,0,365,366,5,108,
	0,0,366,367,5,101,0,0,367,114,1,0,0,0,368,369,5,108,0,0,369,370,5,105,0,
	0,370,371,5,110,0,0,371,372,5,107,0,0,372,116,1,0,0,0,373,374,5,117,0,0,
	374,375,5,110,0,0,375,376,5,115,0,0,376,377,5,97,0,0,377,378,5,102,0,0,
	378,379,5,101,0,0,379,380,5,95,0,0,380,381,5,117,0,0,381,382,5,110,0,0,
	382,383,5,105,0,0,383,384,5,111,0,0,384,385,5,110,0,0,385,118,1,0,0,0,386,
	387,5,115,0,0,387,388,5,116,0,0,388,389,5,114,0,0,389,390,5,117,0,0,390,
	391,5,99,0,0,391,392,5,116,0,0,392,120,1,0,0,0,393,398,5,34,0,0,394,397,
	3,123,61,0,395,397,8,0,0,0,396,394,1,0,0,0,396,395,1,0,0,0,397,400,1,0,
	0,0,398,396,1,0,0,0,398,399,1,0,0,0,399,401,1,0,0,0,400,398,1,0,0,0,401,
	402,5,34,0,0,402,122,1,0,0,0,403,404,5,92,0,0,404,425,7,1,0,0,405,422,5,
	92,0,0,406,407,5,117,0,0,407,408,3,125,62,0,408,409,3,125,62,0,409,410,
	3,125,62,0,410,411,3,125,62,0,411,423,1,0,0,0,412,413,5,85,0,0,413,414,
	3,125,62,0,414,415,3,125,62,0,415,416,3,125,62,0,416,417,3,125,62,0,417,
	418,3,125,62,0,418,419,3,125,62,0,419,420,3,125,62,0,420,421,3,125,62,0,
	421,423,1,0,0,0,422,406,1,0,0,0,422,412,1,0,0,0,423,425,1,0,0,0,424,403,
	1,0,0,0,424,405,1,0,0,0,425,124,1,0,0,0,426,427,7,2,0,0,427,126,1,0,0,0,
	428,430,3,131,65,0,429,428,1,0,0,0,430,431,1,0,0,0,431,429,1,0,0,0,431,
	432,1,0,0,0,432,128,1,0,0,0,433,435,3,131,65,0,434,433,1,0,0,0,435,436,
	1,0,0,0,436,434,1,0,0,0,436,437,1,0,0,0,437,438,1,0,0,0,438,442,5,46,0,
	0,439,441,3,131,65,0,440,439,1,0,0,0,441,444,1,0,0,0,442,440,1,0,0,0,442,
	443,1,0,0,0,443,130,1,0,0,0,444,442,1,0,0,0,445,446,7,3,0,0,446,132,1,0,
	0,0,447,450,3,127,63,0,448,450,3,129,64,0,449,447,1,0,0,0,449,448,1,0,0,
	0,450,459,1,0,0,0,451,460,5,115,0,0,452,453,5,109,0,0,453,460,5,115,0,0,
	454,455,5,117,0,0,455,460,5,115,0,0,456,457,5,110,0,0,457,460,5,115,0,0,
	458,460,7,4,0,0,459,451,1,0,0,0,459,452,1,0,0,0,459,454,1,0,0,0,459,456,
	1,0,0,0,459,458,1,0,0,0,460,134,1,0,0,0,461,464,3,127,63,0,462,464,3,129,
	64,0,463,461,1,0,0,0,463,462,1,0,0,0,464,136,1,0,0,0,465,469,7,5,0,0,466,
	468,7,6,0,0,467,466,1,0,0,0,468,471,1,0,0,0,469,467,1,0,0,0,469,470,1,0,
	0,0,470,138,1,0,0,0,471,469,1,0,0,0,472,474,7,7,0,0,473,472,1,0,0,0,474,
	475,1,0,0,0,475,473,1,0,0,0,475,476,1,0,0,0,476,477,1,0,0,0,477,478,6,69,
	0,0,478,140,1,0,0,0,479,480,5,47,0,0,480,481,5,47,0,0,481,485,1,0,0,0,482,
	484,8,8,0,0,483,482,1,0,0,0,484,487,1,0,0,0,485,483,1,0,0,0,485,486,1,0,
	0,0,486,488,1,0,0,0,487,485,1,0,0,0,488,489,6,70,0,0,489,142,1,0,0,0,14,
	0,396,398,422,424,431,436,442,449,459,463,469,475,485,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!HazeLexer.__ATN) {
			HazeLexer.__ATN = new ATNDeserializer().deserialize(HazeLexer._serializedATN);
		}

		return HazeLexer.__ATN;
	}


	static DecisionsToDFA = HazeLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}