
import math
import glDraw
import glfw
import gl

foo(arena: Arena): Arena& {
    return arena;
}

f(args: ...) {
    for comptime arg, i in args {
        print(i);
    }
}

main(): int {

    // let arena = Arena();
    // let b: Arena& = arena;

    // let vec = arena.alloc<Vec3>({ x: 1.0, y: 2.0, z: 3.0 });

    // let v = Vec3 { x: 4.0, y: 5.0, z: 6.0 };
    // println("Vec 1: ", vec);
    // let vec2 = arena.alloc<Vec3>(v);

    f(1, "test", -17, 8 as u8, Vec3(2.0, 3.0, 4.0));

    // println("Vec 1: ", vec);
    // println("Vec 2: ", vec2);

    return 0;

    if !glfw.init() {
        return 0;
    }

    const window = glfw.createWindow({ 
        title: "Hello World!",
    });

    window.swapInterval(0);
    gl.init(glfw.getProcAddress());

    gl.viewport(0, 0, 1920, 1080);

    let oldTime = glfw.getTime();
    window.swapBuffers();

    let frameCounter: i16 = 0;

    let fps = 0.0;
    while !window.shouldClose() {
        glfw.pollEvents();

        let now = glfw.getTime();
        let elapsed = now - oldTime;
        oldTime = now;

        gl.clearColor(Color((math.sin(oldTime * 10.0) + 1.0) / 2.0, 0.1, 0.1, 1.0));
        gl.clear();

        if fps == 0.0 {
            fps = 1.0 / elapsed;
        }

        let alpha = 0.001;
        fps = fps * (1.0 - alpha) + 1.0 / elapsed * alpha;

        println("FPS:", fps);
        println("Count: ", frameCounter);

        window.swapBuffers();
    }

    glfw.terminate();

    return 0;
}
