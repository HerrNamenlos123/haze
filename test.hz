
struct Context {
};

foo(): i8 {
  return 0;
}

struct A {
  data: i8;

  a(): A {
    return this.ptr;
  }

  b(): A {
    return this.ptr;
  }
}

get(a: A): i8 {
  return 0;
}

bar(): A {
  return A {
    .data: 0,
  };
}

struct Counter {
  counter: i32;

  inc(): Counter {
    this.counter++;
    return this.ptr;
  }

  get(): i32 {
    return this.counter;
  }
}

declare "C" printf(fmt: stringview, ...);

struct Test {
  counter: Counter;
}

main(): i32 {
  const a = foo() + get((A {.data: 0}).a().b()) + get(bar());

  const counter = Counter {.counter: 0}.inc().inc();
  counter.inc().inc();
  const result = counter.inc().get();
  printf("Result: %d\n", result);

  const test = Test { .counter: Counter { .counter: 0} };
  test.counter.inc();
  printf("Result: %d\n", test.counter.counter);

  return 0;
}